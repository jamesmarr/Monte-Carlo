import java.util.Random;

public class MonteCarlo {
    public double  h,k,r;

    private  Random rndm = new Random();

    public MonteCarlo(double h,double k,double r){
        this.h=h;
        this.k=k;
        this.r=r;
    }

    public double nextRainDrop_x(){
        return (rndm.nextDouble()*2*r)+(h-r);
    }

    public double nextRainDrop_y(){
        return (rndm.nextDouble()*2*r)+(k-r);
    }

    public boolean insideCirle(double x , double y){

        return Math.pow((x-h), 2)+Math.pow((y-k), 2)<=Math.pow(r,2);
    }
}




public class Tester {
    static MonteCarlo monteCarlo = new MonteCarlo(5,3,2);
    static int cirCount=0;
    static int sqrCount =0;
    public static void main(String[] args){

        for(int i=0; i<10000000;i++){
            double randx = monteCarlo.nextRainDrop_x();
            double randy = monteCarlo.nextRainDrop_y();

            if(monteCarlo.insideCirle(randx, randy)){
                cirCount++;

            }
            sqrCount++;
        }

        System.out.println("Pi is about , "+cirCount*Math.pow((2*monteCarlo.r), 2)/(sqrCount*Math.pow(monteCarlo.r, 2)));
    }

}
